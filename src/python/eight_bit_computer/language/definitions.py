"""Defnitions of named items"""

from ..utils import remove_whitespace as rw

OPCODE_GROUPS = {
    "COPY":  rw("00...... .... ..."),
    "LOAD":  rw("01...... .... ..."),
    "STORE": rw("10...... .... ..."),
    "ALU":   rw("11...... .... ..."),
}

SRC_REGISTERS = {
    "ACC":   rw("..000... .... ..."),
    "A":     rw("..001... .... ..."),
    "B":     rw("..010... .... ..."),
    "C":     rw("..011... .... ..."),
    "SP":    rw("..100... .... ..."),
    "PC":    rw("..101... .... ..."),
    "SP+/-": rw("..110... .... ..."),
    "IMM":   rw("..111... .... ..."),
}

DEST_REGISTERS = {
    "ACC":   rw(".....000 .... ..."),
    "A":     rw(".....001 .... ..."),
    "B":     rw(".....010 .... ..."),
    "C":     rw(".....011 .... ..."),
    "SP":    rw(".....100 .... ..."),
    "PC":    rw(".....101 .... ..."),
    "SP+/-": rw(".....110 .... ..."),
    "IMM":   rw(".....111 .... ..."),
}

ALU_OPERATIONS = {
    "INCR":           rw("..0000.. .... ..."),
    "DECR":           rw("..0001.. .... ..."),
    "ADD":            rw("..0010.. .... ..."),
    "SUB":            rw("..0011.. .... ..."),
    "ADDC":           rw("..0100.. .... ..."),
    "SUBC":           rw("..0101.. .... ..."),
    "AND":            rw("..0110.. .... ..."),
    "OR":             rw("..0111.. .... ..."),
    "NAND":           rw("..1000.. .... ..."),
    "XOR":            rw("..1001.. .... ..."),
    "NOT":            rw("..1010.. .... ..."),
    "LSHIFT":         rw("..1011.. .... ..."),
    "LSHIFTC":        rw("..1100.. .... ..."),
    "TEST_LTE_GT_EQ": rw("..1101.. .... ..."),
    "TEST_LT_GTE":    rw("..1110.. .... ..."),
    "TEST_ZERO_NEG":  rw("..1111.. .... ..."),
}

ALU_OPERANDS = {
    "ACC": rw("......00 .... ..."),
    "A":   rw("......01 .... ..."),
    "B":   rw("......10 .... ..."),
    "C":   rw("......11 .... ..."),
}



FLAGS = {
    "ZERO": {
        "HIGH":         rw("........ 1... ..."),
        "LOW":          rw("........ 0... ..."),
    },
    "NEGATIVE": {
        "HIGH":         rw("........ .1.. ..."),
        "LOW":          rw("........ .0.. ..."),
    },
    "CARRY_BORROW": {
        "HIGH":         rw("........ ..1. ..."),
        "LOW":          rw("........ ..0. ..."),
    },
    "EQUAL": {
        "HIGH":         rw("........ ...1 ..."),
        "LOW":          rw("........ ...0 ..."),
    },
    "ANY" :             rw("........ .... ..."),
}

STEPS = {
    0: rw("........ .... 000"),
    1: rw("........ .... 001"),
    2: rw("........ .... 010"),
    3: rw("........ .... 011"),
    4: rw("........ .... 100"),
    5: rw("........ .... 101"),
    6: rw("........ .... 110"),
    7: rw("........ .... 111"),
}

# ALU_OUTPUT_MODES = {
#     "A_PLUS_1"                      
#     "A_PLUS_B"                      
#     "A_MINUS_B"                     
#     "A_PLUS_B_PLUS_1"                       
#     "A_MINUS_B_MINS_1"                      
#     "A_AND_B"                       
#     "A_OR_B"                        
#     "A_NAND_B"                      
#     "A_XOR_B"                       
#     "NOT_A"                     
#     "A_PLUS_A"                      
#     "A_PLUS_A_PLUS_1"                       
#     "COMPARE_LTE_GT_EQ"                     
#     "COMPARE_LT_GTE"
#     "A"                        
#     "ZERO"                      
# }


MODULE_CONTROL = {
    "ACC": {
        "IN":               rw("1....... ........ ........ ........"),
        "OUT":              rw(".1...... ........ ........ ........"),
    },
    "A": {
        "IN":               rw("..1..... ........ ........ ........"),
        "OUT":              rw("...1.... ........ ........ ........"),
    },
    "B": {
        "IN":               rw("....1... ........ ........ ........"),
        "OUT":              rw(".....1.. ........ ........ ........"),
    },
    "C": {
        "IN":               rw("......1. ........ ........ ........"),
        "OUT":              rw(".......1 ........ ........ ........"),
    },
    "ALU": {
        "STORE_RESULT":     rw("........ 1....... ........ ........"),
        "OUT":              rw("........ .1...... ........ ........"),
        "STORE_FLAGS":      rw("........ ..1..... ........ ........"),
        "A_IS_BUS":         rw("........ ...1.... ........ ........"),
        "S0":               rw("........ ....1... ........ ........"),
        "S1":               rw("........ .....1.. ........ ........"),
        "S2":               rw("........ ......1. ........ ........"),
        "S3":               rw("........ .......1 ........ ........"),
        "M":                rw("........ ........ 1....... ........"),
        "C_IN":             rw("........ ........ .1...... ........"),
    },
    "MAR": {
        "IN":               rw("........ ........ ..1..... ........"),
    },
    "RAM": {
        "IN":               rw("........ ........ ...1.... ........"),
        "OUT":              rw("........ ........ ....1... ........"),
        "SEL_PROG_MEM":     rw("........ ........ .....1.. ........"),
    },
    "PC": {
        "IN":               rw("........ ........ ......1. ........"),
        "OUT":              rw("........ ........ .......1 ........"),
        "COUNT":            rw("........ ........ ........ 1......."),
    },
    "SP": {
        "IN":               rw("........ ........ ........ .1......"),
        "OUT":              rw("........ ........ ........ ..1....."),
    },
    "IR": {
        "IN":               rw("........ ........ ........ ...1...."),
    },
    "CU": {
        "STEP_RESET":       rw("........ ........ ........ ....1..."),
    },
    "CLOCK": {
        "HALT":             rw("........ ........ ........ .....1.."),
    },
}

EMPTY_ADDRESS = rw("........ .... ...")
MODULE_CONTROLS_DEFAULT = rw("00000000 00000000 00000000 00000000")

# TESTS = {
#     "ZERO":   "000",
#     "EQ":     "001",
#     "NEG":    "010",
#     "LTE":    "011",
#     "GT":     "100",
#     "LT":     "101",
#     "GTE"     "110"
# }

